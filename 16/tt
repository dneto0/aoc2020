#!/usr/bin/env perl
# Copyright 2020 David Neto
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use strict;

# list of rules, each rule is an array ref of pairs of start/stop values.
my @rules = ();

my @tickets = ();
my $reading_nearby = 0;
foreach my $line (<>) {
  if ($line =~ m/^.*: (\d+)-(\d+) or (\d+)-(\d+)/) {
    push @rules, [$1,$2,$3,$4];
  } elsif ($line =~ m/nearby tickets:/) {
    $reading_nearby = 1;
  } elsif ($reading_nearby) {
    chomp $line;
    push @tickets, $line;
  }
}

sub valid($) {
  my $v = shift;
  foreach my $rule (@rules) {
    return 1 if 
    (($rule->[0] <= $v) and ($v <= $rule->[1])) 
    or
    (($rule->[2] <= $v) and ($v <= $rule->[3]));
  }
  return 0;
}

my $badsum = 0;
foreach my $line (@tickets) {
  foreach my $num (map {$_ +0;} (split(/,/,$line))) {
    $badsum += $num unless valid($num);
  }
}
print "$badsum\n";
