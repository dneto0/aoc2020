#!/usr/bin/env perl
# Copyright 2020 David Neto
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Problem statement: https://adventofcode.com/2020/day/1
#
# Given a list of numbers, find three that sum to 2020, and then
# print their product. If no such pair exists, print nothing.

use strict;

sub num_yes(@) {
  my @answers = @_;
  # The trick is to use a hash (dictionary) to manage uniqueness.
  # key is the letter to which someone answered yes, value is 1
  my %yes = ();
  foreach my $line (@answers) {
    foreach my $key (split(//,$line)) {
      $yes{$key} = 1;
    }
  }
  my @uniques = (keys %yes);
  # SNAFU: Watch out here. $#BLAH is the index of the last item in BLAH.
  # So add 1 when counting the items in BLAH.
  return $#uniques + 1;
}

my @group_answers = ();
my $sum = 0;
foreach my $line (<>) {
  if ($line =~ m/^\s+$/){
    $sum += num_yes(@group_answers);
    @group_answers = ();
  } else {
    $line =~ s/[^a-z]//g;
    push @group_answers, $line;
  }
}
$sum += num_yes(@group_answers);

print "\nsum: $sum\n";
exit 0;
