#!/usr/bin/env perl
# Copyright 2020 David Neto
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Problem statement: https://adventofcode.com/2020/day/1
#
# Given a list of numbers, find three that sum to 2020, and then
# print their product. If no such pair exists, print nothing.

use strict;
use Data::Dumper;

# List of hash references, where each hash reference is the key-value
# set for a single passport
my @passports = ();

my %current = ();
my $have_data = 0;
foreach my $line (<>) {
  if ($line =~ m/^\s+$/) {
    push @passports, {(%current)};
    %current = ();
    $have_data = 0;
  } else {
    foreach my $pair (split(/\s+/, $line)) {
      # SNAFU1:  At first I forgot the + on the [^:] so I wasn't parsing key correctly.
      if ($pair =~ m/([^:]+)+:(\S+)/) {
        $current{$1} = $2;
        $have_data = 1;
      }
    }
  }
}
push(@passports, {(%current)}) if $have_data;

my %required = qw(
    byr (Birth-Year)
    iyr (Issue-Year)
    eyr (Expiration-Year)
    hgt (Height)
    hcl (Hair-Color)
    ecl (Eye-Color)
    pid (Passport-Id)
);
my $num_valid = 0;
foreach my $passport (@passports) {
  print Dumper($passport);
  my %missing = %required;
  foreach my $key (keys %$passport) {
    delete $missing{$key};
  }
  my @remaining = keys %missing;
  $num_valid++ if $#remaining == -1;
}

print "$num_valid\n";
exit 0;
