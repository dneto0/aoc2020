#!/usr/bin/env perl
# Copyright 2020 David Neto
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use strict;

# The instruction opcodes, indexed by position
my @opcode = ();
# The instruction parameter, indexed by position
my @offset = ();

# visit_count[i] is the number of times instruction i has
# been visited
my @visit_count = ();

foreach my $line (<>) {
  if ($line =~ m/^(\S+)\s+([+-]\d+)/) {
    push @opcode, $1;
    push @offset, $2 + 0;
    push @visit_count, 0;
  }
}

my $accum = 0;
my $ip = 0; # Instruction pointer
while ($visit_count[$ip] < 1) {
  $visit_count[$ip]++;
  if ($opcode[$ip] eq 'nop') {
    $ip++;
  } elsif ($opcode[$ip] eq 'jmp') {
    $ip += $offset[$ip];
  } elsif ($opcode[$ip] eq 'acc') {
    $accum += $offset[$ip];
    $ip++;
  }
}
print "Accumulator is $accum\n";

exit 0;
